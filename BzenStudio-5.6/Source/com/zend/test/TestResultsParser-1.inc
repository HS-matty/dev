<?/*   +----------------------------------------------------------------+   | Zend Test Engine                                               |   +----------------------------------------------------------------+   | Copyright (c) 1998-2003 Zend Technologies Ltd.                 |   +----------------------------------------------------------------+   | The contents of this source file is the sole property of       |   | Zend Technologies Ltd.  Unauthorized duplication or access is  |   | prohibited.                                                    |   +----------------------------------------------------------------+   | Author:    Michael Spector <michael@zend.com>                  |   +----------------------------------------------------------------+*/// Last update: $Id: TestResultsParser-1.inc,v 1.2 2006-11-20 10:57:59 shachar Exp $include_once ('Encoder.inc');include_once ('Common.inc');include_once ('SystemFactory.inc');/** * @version $Revision: 1.2 $ * @package test_engine * @access public */abstract class TestResultsParser{	protected $id;             // ID of the test	protected $output;         // Output from the test	protected $script;         // Original test case script path (non-encoded version)	protected $orig_script;    // Original version of test case as it was passed	protected $disabled;       // Whether this test is disabled	/**	* Constructor	* @param int $id ID of the test	* @param string $output Output from the test	* @param string $script Original test case script path	* @param boolean $disabled Whether this test is disabled (optional, default: false)	*/	public function TestResultsParser ($id, $output, $script, $disabled=false)	{		$this->id = $id;		$this->output = trim(str_replace ("", "", $output));		$script = SystemFactory::instance()->makeFullPath ("%%TESTS_DIR%%", $script);		if (!file_exists ($script)) {			throw new Exception ("Test case script: {$script} doesn't exist");		}				$this->orig_script = $script;		if (Encoder::isFileEncoded ($script)) {			$this->script = Common::getNotEncodedVersion($script);		} else {			$this->script = $script;		}		$this->disabled = $disabled;	}	/**	* @return string path to the test case file	*/	public function getTestPath()	{		return $this->orig_script;	}	/**	* @return string path to the test case file (non-encoded version, if exists)	*/	public function getNotEncodedTestPath()	{		return $this->script;	}	/**	* This function parses the output from test and fills out the array of results	* @param array  $test Reference to the test results hash	* @param string $appendix_to_name string to add to the test name	*/	abstract public function doParse (&$test, $appendix_to_name="");}?>